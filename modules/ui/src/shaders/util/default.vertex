/*
 * Copyright 2019 Adobe. All rights reserved.
 * This file is licensed to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy
 * of the License at http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under
 * the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
 * OF ANY KIND, either express or implied. See the License for the specific language
 * governing permissions and limitations under the License.
 */

 #include "layout/default_vertex_layout.glsl"

#ifdef SKELETAL
const int MAX_NUM_BONES = 64;
uniform mat4 bones[MAX_NUM_BONES];
#endif


#pragma property in_color "Default Color" Color(1,0,0,1)

void main()
{
    vec4 model_pos = vec4(in_pos, 1);

    #ifdef SKELETAL
    model_pos = bones[int(in_bone_ids[0])] * model_pos * in_bone_weights[0]
    + bones[int(in_bone_ids[1])] * model_pos * in_bone_weights[1]
    + bones[int(in_bone_ids[2])] * model_pos * in_bone_weights[2]
    + bones[int(in_bone_ids[3])] * model_pos * in_bone_weights[3];
    #endif


    //Pos and normal to world space
    vs_out_pos = (M * model_pos).xyz;
    vs_out_normal = (NMat * vec4(in_normal,0.0)).xyz;
    vs_out_uv = in_uv;
    vs_out_color = in_color;
    vs_out_tangent = (NMat * vec4(in_tangent,0.0)).xyz;;
    vs_out_bitangent = (NMat * vec4(in_bitangent,0.0)).xyz;;

    //To clip space
    gl_Position = PV * vec4(vs_out_pos,1.0);
}
